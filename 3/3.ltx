\documentclass[11pt]{article}
\usepackage{fullpage}
\usepackage{listings}
\lstset{basicstyle=\ttfamily}
\usepackage{graphicx}
\usepackage[binary-units]{siunitx}
\DeclareSIUnit{\degreeFahrenheit}{\degree F}
\usepackage{amsmath}
\usepackage{hyperref}

\newcommand{\SIfrac}[3]{
  {\ensuremath{\frac{\num{#1}}{\num{#2}}\,\si{#3}}}
}

\title{CS 3468 -- Homework 3}
\author{Stuart Olsen}

\begin{document}
\maketitle

\section*{Chapter 6}
\subsection*{What is the purpose of I/O on a board?}
To move information from an input device to the master processor and/or to move information from the master processor to an output device.

\subsection*{List five categories of board I/O with two real-world examples under each category.}
\begin{itemize}
\item Networking and communications I/O
  \begin{itemize}
  \item Ethernet controllers
  \item WLAN controllers
  \end{itemize}
\item Input
  \begin{itemize}
  \item keyboard
  \item mouse
  \end{itemize}
\item Graphics and output I/O
  \begin{itemize}
  \item CRT display
  \item printer
  \end{itemize}
\item Storage I/O
  \begin{itemize}
  \item optical disk controllers
  \item magnetic disk controllers
  \end{itemize}
\item Debugging I/O
  \begin{itemize}
  \item JTAG
  \item serial I/O
  \end{itemize}
\end{itemize}

\subsection*{What is the difference between serial and parallel I/O?}
I/O performed by transmitting one bit at a time is {\em serial} I/O. I/O performed by transmitting multiple bits simultaneously is {\em parallel} I/O.

\subsection*{Give a real-world I/O example of each.}
A USB mouse communicates serially, while legacy ATA devices communicate over a parallel bus.

\subsection*{What is the difference between simplex, half-duplex, and full duplex transmission?}
Simplex transmission limits communication to one direction. Half-duplex allows bidirectional communication, but in only one direction at any given time. Full duplex transmission allows simultaneous bidirectional communication.

\subsection*{Indicate which transmission scheme is shown in Figures 6-27a, b, and c.}
\begin{itemize}
\item {\itshape Figure 6-27a} --- Half-duplex transmission
\item {\itshape Figure 6-27b} --- Simplex transmission
\item {\itshape Figure 6-27c} --- Full duplex transmission
\end{itemize}

\subsection*{What is asynchronous transfer of serial data?}
{\em Asynchronous} transfer of serial data refers to when I/O transfers occur intermittently at irregular intervals.

\subsection*{Draw a diagram that describes how asynchronous transfer of serial data works.}
{\itshape See attached.}

\subsection*{What is synchronous transfer of serial data?}
{\em Synchronous} transfer of serial data refers to when I/O transfers occur steadily at regular intervals.

\subsection*{Draw and describe how synchronous transfer of serial data works.}
{\itshape See attached.}

\subsection*{How can board I/O negatively impact a system's performance?}
Board I/O can negatively impact a system's performance by {\em bottlenecking} the system. For example, a disk controller with high response times could degrade the performance of a system which makes many small disk accesses.

\section*{Additional Questions}
\subsection[i]{Assume a CPU has pins connected to a AD7304 chip. The CPU will send {\ttfamily 0x7D} to channel C of the chip.}

\subsubsection*{What is in the data frame?}
\begin{center}
  \begin{tabular}[c]{|*{2}{c|}|*{2}{c|}|*{8}{c|}}
    \hline
    {\bf SA} & {\bf SI} & {\bf A1} & {\bf A0} & {\bf D7} & {\bf D6} & {\bf D5} & {\bf D4} & {\bf D3} & {\bf D2} & {\bf D1} & {\bf D0}\\
    \hline
    {\tt 1} & {\tt 1} & {\tt 1} & {\tt 0} & {\tt 0} & {\tt 1} & {\tt 1} & {\tt 1} & {\tt 1} & {\tt 1} & {\tt 0} & {\tt 1}\\
    \hline
  \end{tabular}
\end{center}

\subsubsection*{What is the timing diagram for this transmission?}
{\itshape See attached.}

\subsection[ii]{Assume two devices are using UART for communication. The sending device has a clock of \SI{9600}{\hertz} and sends data at \SI{9600}{\bit\per\second}. The receiving device has a clock of \SI{200}{\kilo\hertz} and uses a counter to generate a slower clock for receiving data. For example, the device lets the counter count from $0$ to $9$ periodically. Then, the device generates a clock of \SI{20}{\kilo\hertz}. Assume the counter must be a multiple of $16$ due to the design inside the hardware. Hence, the receiving device can only generate a receiving clock close to \SI{9600}{\hertz}.}

\subsubsection*{Assume the receiving clock is faster than \SI{9600}{\hertz}. What is the maximum frame size (including all start and stop bits)?}
Frame size is bounded by the inequality

\begin{align*}
  \mathrm{frame\ size} < \frac{f_s}{|\Delta f|}.
\end{align*}

From this, it can be seen that the frame size is maximized when $|\Delta f|$ is minimized--- that is, when $f_s$ and $f_r$ are closest. $f_s$ is fixed at \SI{9600}{\hertz}. The closest possible value of $f_r$ above this is $\frac{1}{16} \cdot \SI{200}{\kilo\hertz} = \SI{12500}{\hertz}$. This gives $|\Delta f| = \SI{2900}{\hertz}$. Then,

\begin{align*}
  \mathrm{frame\ size} &< \frac{f_s}{|\Delta f|}\\
  \mathrm{frame\ size} &< \frac{\SI{9600}{\hertz}}{\SI{2900}{\hertz}}\\
  \mathrm{frame\ size} &< {\sim}3.310.
\end{align*}

Because the frame size must be an integer, the maximum frame size is \fbox{3}.

\subsubsection*{Assume the receiving clock is slower than \SI{9600}{\hertz}. What is the maximum frame size (including all start and stop bits)?}
The closest possible value of $f_r$ below $f_s$ is $\frac{1}{32} \cdot \SI{200}{\kilo\hertz} = \SI{6250}{\hertz}$. This gives $|\Delta f| = \SI{3350}{\hertz}$. Then,

\begin{align*}
  \mathrm{frame\ size} &< \frac{f_s}{|\Delta f|}\\
  \mathrm{frame\ size} &< \frac{\SI{9600}{\hertz}}{\SI{3350}{\hertz}}\\
  \mathrm{frame\ size} &< {\sim}2.866.
\end{align*}

Then, the maximum frame size is \fbox{2}.

\end{document}
